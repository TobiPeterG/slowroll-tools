#!/usr/bin/perl -w
use strict;
use JSON::XS;
sub dumpmap($);

my %pkgmap=();
my %pkgmapsrcbin=();
my %pkgmapdep=();
my %pkgmapdepcount=();

for my $filename (<buildinfo/*>) {
  my $pkg = $filename; $pkg=~s!.*/!!;
  my $xml=qx(cat $filename);
  #die "$filename = $deps" if $deps; # debug
  
  my @dep = $xml =~ m/<bdep name="([^"]+)"/g;
  my @subpack = $xml =~ m!<subpack>([^<>]+)</subpack>!g;
  #die "$pkg @subpack @dep" if $pkg eq "bash"; # debug
  #die "$pkg @subpack @dep" if @dep; # debug
  for my $p ($pkg, @subpack) {
    $pkgmap{$pkg} = \@dep;
  }
  $pkgmapsrcbin{$pkg} = \@subpack;
  for my $dep (@dep) {
    foreach my $sub (@subpack) {
      $pkgmapdep{$dep}->{$sub} = 1;
    }
  }
}

foreach my $p (keys %pkgmapdep) {
  $pkgmapdepcount{$p} = scalar keys %{$pkgmapdep{$p}};
}

# dump parsed maps
my $coder = JSON::XS->new->pretty->canonical;
for my $map (qw(pkgmap pkgmapsrcbin pkgmapdep pkgmapdepcount)) {
  dumpmap $map;
}

sub dumpmap($)
{ my $mapname=shift;
  mkdir("out");
  open(F, ">out/$mapname") or die;
  print F $coder->encode(eval '\%'.$mapname);
}
