#!/usr/bin/perl -w
use strict;
use JSON::XS;
sub dumpmap($);
sub loadmap($);

my %pkgmapsrcbin=();
my %pkgmapsrcdep=();
my %pkgmapdep=();
my %pkgmapdepcount=();

for my $map (qw(pkgmapsrcdep pkgmapsrcbin)) {
  loadmap $map;
}

for my $pkg (sort keys %pkgmapsrcbin) {
  my $dep = $pkgmapsrcdep{$pkg};
  my $subpack = $pkgmapsrcbin{$pkg};
  #die "$pkg @$subpack @$dep" if $pkg eq "bash"; # debug
  for my $dep (@$dep) {
    foreach my $sub (@$subpack) {
      $pkgmapdep{$dep}->{$sub} = 1;
    }
  }
}

foreach my $p (keys %pkgmapdep) {
  $pkgmapdepcount{$p} = scalar keys %{$pkgmapdep{$p}};
}

# dump parsed maps
my $coder = JSON::XS->new->pretty->canonical;
for my $map (qw(pkgmapdepcount)) {
  dumpmap $map;
}

sub dumpmap($)
{ my $mapname=shift;
  mkdir("out");
  open(F, ">out/$mapname") or die;
  print F $coder->encode(eval '\%'.$mapname);
}

sub loadmap($)
{ my $mapname=shift;
  open(F, "<out/$mapname") or die;
  local $/=undef;
  my $ref = decode_json(<F>);
  eval '%'.$mapname.' = %$ref';
}
