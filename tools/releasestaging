#!/bin/bash
if [[ $DEBUG ]] ; then set -x ; fi
slo=openSUSE:ALP:Experimental:Slowroll
# from https://github.com/bmwiedemann/build-compare/tree/slowroll
bc=build-compare
dry=echo
dry=
offline=true
offline=false
mkdir -p tmp

function osc_getbinaries
{
    repo=$1
    pkg=$2
    dest=$3
    osc ls -b $repo $pkg standard x86_64 | grep -q .
    ret=$?
    if [[ $ret = 0 ]] ; then
        osc getbinaries --sources --destdir=$dest $repo $pkg standard x86_64
        rm -f $dest/rpmlint.log
        rm -f $dest/::import::i586::*-32bit*.rpm # workaround missing i586 builds in Slowroll - if 64-bit binaries match, we just use the TW version
    fi
    return $ret
}

#pkgs=`osc ls $slo:Staging`
pkgs=out/pending/*
for pkg in $pkgs ; do
  pkg=$(basename $pkg)
  if grep ^$pkg in/build-compare-differed-builds.txt ; then
    echo "skipping unreproducible package $pkg..."
    continue
  fi
  # fetch binaries from Factory + Staging
  if ! $offline ; then
    rm -rf tmp/{slo,slos,slos.s,fac}
    osc_getbinaries $slo:Staging     $pkg tmp/slos || continue
    osc_getbinaries $slo             $pkg tmp/slo
    mkdir tmp/slos.s
    mv tmp/slos/*.src.rpm tmp/slos.s
  fi

  # build-compare with special exception for disturl+distribution
  if $bc/same-build-result.sh tmp/slo tmp/slos tmp/slos.s ; then
    # skip release if same
    continue
  fi
  $offline || osc_getbinaries openSUSE:Factory $pkg tmp/fac
  equivalent=false
  if $bc/same-build-result.sh tmp/fac tmp/slos tmp/slos.s ; then
    equivalent=true
  fi
  src=$slo:Staging
  if $equivalent ; then
    src=openSUSE:Factory
  fi
  echo "XX releasing $pkg"
  $dry osc release $src --target-project=$slo "$pkg" --target-repository=standard -r standard
  $dry rm out/pending/$pkg
done
