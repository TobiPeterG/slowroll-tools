#!/usr/bin/perl -w
# usage: DRYRUN=0 tools/syncslob.dvd 2>&1 | tee out/log/syncslob.dvd-$(date -I)
# for p in `grep "too new" out/log/syncslob.dvd-2024-05-09b|cut -d" " -f1` ; do echo osc linkpac $slobase "$p" $slo:Build:iso:deps ; done | tee $log | bash -x
use strict;
use XML::Bare;
use lib "lib";
use common;

$|=1;
my $src  = "openSUSE:Factory";
my $dest = $ENV{slobase};
my $dry = ($ENV{DRYRUN}//1)==0 ? "":"echo";
my $srcbin = load_json("out/pkgmapsrcbin");
my %binsrc;
while(my @a = each(%$srcbin)) {
    foreach my $bin (@{$a[1]}) {
        $binsrc{$bin} = $a[0];
    }
}
open(F, "<", "in/missing-dvd-rpms") or die $!;
my @rpms;
while(<F>) { chomp; push @rpms, $_;}
my $pkgs = `osc ls $dest`;
my %pkgs = map {$_=>1} split("\n", $pkgs);
my %submitted;
my @pkgs=();
foreach my $bin (@rpms) {
    my $name = $bin;
    my $pkg = $binsrc{$name}||$name;
    my $subpkg = "";
    if(!$pkg) {
         $name =~ s/-([^-]+)$//; $subpkg=$1; $pkg = $binsrc{$name};
         if(!$pkg) { warn "no src for $name rpm found" ; next}
    }
    #print "$name $pkg\n";
    next if $submitted{$pkg}++;
    next if $pkgs{$pkg};
    if($pkg =~ s/:(.*)//) {$subpkg=":$1"}; # sync whole pkg so the test above does not give false matches
    my $check = `osc api /build/$src/standard/x86_64/$pkg$subpkg | grep rpmlint.log`;
    next unless $?==0;
    push(@pkgs, $pkg);
}
system "$dry tools/obsrsync @pkgs";
